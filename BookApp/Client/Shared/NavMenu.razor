@using BookApp.Client.Pages.Identity

@inject IBookAnalysisStorage bookAnalysisStorage
@inject IJSRuntime JSRuntime

<style>
    .sidebar-container {
        position: sticky;
        width: 250px;
        top: 0;
    }

    .custom-sidebar {
        width: 250px;
        height: 100vh;
        position: fixed;
        top: 0;
        background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%);
    }
</style>

@*<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BookApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>*@

<div class="custom-sidebar">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/redirect" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        @if (userLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="">
                    <span class="oi oi-person" aria-hidden="true"></span> Hello @currentUsername
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Login
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/register">
                    <span class="oi oi-plus" aria-hidden="true"></span> Register
                </NavLink>
            </div>
        }
        @if (analysisIsLoaded)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/reader">
                    <span class="oi oi-book" aria-hidden="true"></span> Reader
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/summary">
                    <span class="oi oi-info" aria-hidden="true"></span> Summary
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    //private bool collapseNavMenu = true;

    //private string? NavMenuCssClass => collapseNavMenu ? "collapse" : "custom-sidebar";

    //private void ToggleNavMenu()
    //{
    //    collapseNavMenu = !collapseNavMenu;
    //}

    bool analysisIsLoaded = false;
    bool userLoggedIn = false;
    string currentUsername = "";

    private async Task<string> GetItemFromLocalStorage(string itemName)
    {
        return await JSRuntime.InvokeAsync<string>("localStorageFunctions.getItem", itemName);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        analysisIsLoaded = await bookAnalysisStorage.AnalysisIsLoaded();
    }

    protected async override Task OnInitializedAsync()
    {
        userLoggedIn = await GetItemFromLocalStorage("currentUserToken") != null;
        if (userLoggedIn)
        {
            currentUsername = await GetItemFromLocalStorage("currentUsername");
        }
    }
}
