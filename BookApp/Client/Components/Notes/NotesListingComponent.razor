@using BookApp.Client.Delegates

@inject IAppStorage appStorage

<div style="border-width:2px; border-style: solid; border-color: black;">
    <ErrorHandlerComponent ChildComponentName="Add Note"><ChildContent>
        <AddNoteComponent createNoteDelegate="createNoteDelegate" enableAddingNewNotes="enableAddingNewNotes" newNote="newNote" NoteClientService="NoteClientService" userCanEdit="userCanEdit"></AddNoteComponent>
    </ChildContent></ErrorHandlerComponent>

    <hr style="margin:3px; border:2px solid white;" />

    @foreach (NoteModel note in Notes)
    {
        <ErrorHandlerComponent ChildComponentName="NoteContainer"><ChildContent>
                <NoteContainerComponent BookAnalysis="BookAnalysis" note="note" userCanEdit="userCanEdit" NoteClientService="NoteClientService"></NoteContainerComponent>
        </ChildContent></ErrorHandlerComponent>

        <hr style="margin:3px; border:2px solid white;" />
    }
</div>

@code {
    [Parameter]
    public IEnumerable<INoteClientModel> Notes { get; set; }
    [Parameter]
    public BookAnalysisDetailedModel BookAnalysis { get; set; }
    [Parameter]
    public INoteClientModel newNote { get; set; }
    [Parameter]
    public INoteClientService NoteClientService { get; set; }
    [Parameter]
    public CreateNoteDelegate createNoteDelegate { get; set; }
    [Parameter]
    public bool enableAddingNewNotes { get; set; }

    private bool userCanEdit = false;

    protected async override Task OnInitializedAsync()
    {
        userCanEdit = await appStorage.UserHasStoredAnalysisEditorialRights();
    }
}
