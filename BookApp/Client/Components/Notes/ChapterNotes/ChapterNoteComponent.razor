@inject IModalService Modal
@inject IChapterNoteClientService _chapterNoteClientService

<button class="button-action" @onclick="ShowAddChapterNoteModal">Add Chapter Note</button>
<h3>Chapter Notes:</h3>
@foreach (ChapterNoteModel note in ChapterNotes.Where(n => n.ChapterNumber == currentCount))
{
    <hr />
    <div class="note-holder">
        <p>@note.Content</p>
    </div>
    <button class="button-action" @onclick="() => ShowEditChapterNoteModal(note)">Edit</button>
    <button class="button-action" @onclick="() => DeleteChapterNote(note.Id)">Delete</button>
    <button class="button-action" @onclick="() => ShowManageTagsModal(note)">Manage Tags</button>
}

@code {
    [Parameter]
    public List<ChapterNoteModel> ChapterNotes { get; set; }
    [Parameter]
    public EventCallback<List<ChapterNoteModel>> ChapterNotesChanged { get; set; }
    [Parameter]
    public int bookAnalysisId { get; set; }
    [Parameter]
    public int currentCount { get; set; }
    [Parameter]
    public List<TagModel> Tags { get; set; }

    private async Task ShowAddChapterNoteModal()
    {
        var parameters = new ModalParameters()
            .Add(nameof(AddChapterNoteComponent.ChapterNotes), ChapterNotes)
            .Add(nameof(AddChapterNoteComponent.pageNumber), currentCount)
            .Add(nameof(AddChapterNoteComponent.bookAnalysisId), bookAnalysisId);

        var modal = Modal.Show<AddChapterNoteComponent>("Add Chapter Note", parameters);
        await modal.Result;
    }

    private async Task ShowEditChapterNoteModal(ChapterNoteModel note)
    {
        var parameters = new ModalParameters().Add(nameof(EditChapterNoteComponent.ChapterNote), note);
        var modal = Modal.Show<EditChapterNoteComponent>("Edit Chapter Note", parameters);
        await modal.Result;
    }

    private async Task DeleteChapterNote(int noteId)
    {
        await _chapterNoteClientService.DeleteNote(noteId, bookAnalysisId);
    }

    private async Task ShowManageTagsModal(ChapterNoteModel note)
    {
        var parameters = new ModalParameters()
        .Add(nameof(ManageTagsComponent.bookAnalysisId), bookAnalysisId)
        .Add(nameof(ManageTagsComponent.Tags), Tags)
        .Add(nameof(ManageTagsComponent.taggedItem), note)
        .Add(nameof(ManageTagsComponent.tagManagerClientService), _chapterNoteClientService);

        var modal = Modal.Show<ManageTagsComponent>("Manage Chapter Note Tags", parameters);
        await modal.Result;
    }
}